const responseMessage = {
  loginSuccess: "Login successful!",
  signupSuccess: "Account created successful!",
  onlyUserRegister: "Only user can register!",
  userNotFound: "user not found!",
  internalServerError: "Internal Server Error!",
  alreadyEmail: "Email is already registered!",
  emailUnverified: "enter the OTP below  to verify  your Email address!",
  accountBlock: "Your account has been blocked!",
  invalidUserPasswordEmail: "You have entered an invalid email or password!",
  invalidUserPasswordUserName: "You have entered an invalid userName or password!",
  invalidOTP: "Invalid OTP!",
  expireOTP: "OTP has been expired!",
  sentOTP: "OTP has been send successfuly!",
  OTPverified: "OTP has been verified successfully!",
  invalidEmail: "You have entered an invalid email!",
  emailVerificationComplete: "Email verification complete!",
  invalidIdTokenAndAccessToken: "You have entered an invalid idToken or accessToken!",
  errorMail: "Error in mail system!",
  resetPasswordSuccess: "Your password has been successfully reset!",
  resetPasswordError: "Error in reset password!",
  oldPasswordError: "You have entered the old password wrong!",
  passwordChangeSuccess: "Password has been changed!",
  passwordChangeError: "During password changing error in database!",
  invalidOldTokenReFreshToken: "You have entered an invalid old token or refresh token!",
  refreshTokenNotFound: "Refresh token not found!",
  tokenNotExpire: "Token has been not expired!",
  tokenExpire: "Token has been expired!",
  refreshTokenSuccess: "A new token has been successfully generated!",
  differentToken: "Do not try a different token!",
  tokenNotFound: "We can't find tokens in header!",
  logout: "Logout Successful!",
  fileUploadSuccess: "Your requested file uploaded successfully!",
  addDataError: "Oops! Something went wrong!",
  buySubscription: 'Please buy a subscription!',
  buyCommercialLicense: 'Please buy a commercial license!',
  commercialLicenseNotExist: `You've request post commercial license does not exist! Please pass valid params`,
  extendedLicenseNotExist: `You've request post extended license does not exist! Please pass valid params`,
  buyExtendedLicense: 'Please buy a extended license!',
  downloadLimit: "Your download limit of 10 exceed!",
  paymentSuccess: "Payment successful!",
  purchaseSuccess: "purchase successful!",
  paymentFailed: "Payment fail!",
  OTPFailed: "Fail send OTP!",
  invalidBodyFields: "Invalid body fields combination!",
  decryptionError: "Please pass a valid encryption string!",
  decryptionSuccess: "Your data successfully decrypted!",
  encryptionSuccess: "Your data successfully encrypted!",
  encryptionError: "Please pass a valid decryption string!",
  accessDenied: "Access denied",
  invalidToken: "Invalid token",
  customMessage: (message) => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()}` },
  invalidId: (message) => { return `invalid ${message}!` },
  dataAlreadyExist: (message) => { return `Since the ${message} is already in use, kindly modify it!` },
  getDataSuccess: (message) => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} successfully retrieved!` },
  addDataSuccess: (message) => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} successfully created!` },
  addDataSuccess: (message) => {return `${message.charAt(0).toUpperCase() + message.slice(1).toLowerCase()} successfully created!`;},
  getDataNotFound: (message) => { return `We couldn't find the ${message.toLowerCase()} you requested!` },
  updateDataSuccess: (message) => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} has been successfully updated!` },
  updateDataError: (message) => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} updating time getting an error!` },
  deleteDataSuccess: (message) => { return `Your ${message.toLowerCase()} has been successfully deleted!` },
  deleteDataSuccessError: (message) => { return `Your ${message.toLowerCase()} has been not deleted!` },
  notFound: (message) => { return `You've request post ${message.toLowerCase()} does not exist! Please pass valid params` },
}

export default responseMessage;